<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd">

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	<!-- 权限管理器 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 登录成功后的跳转地址 -->
		<property name="successUrl" value="/index.html" />
		<!-- 登录请求地址 -->
		<property name="loginUrl" value="/login.html" />
		<!-- 越权访问，跳转地址 -->
		<property name="unauthorizedUrl" value="/error.html" />
		
		<property name="filters">
			<map>
				<entry key="authc" value-ref="shiro"></entry>
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/**=anon
			</value>
		</property>
	</bean>
	<bean id="shiro" class="com.pmp.filter.shiro.ShiroFilter"/>
	
	<bean id="shiroRealm" class="com.pmp.filter.shiro.ShiroRealm" />

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroRealm" />
	<!-- 	需要使用cache的话加上这句 -->
		<!-- <property name="cacheManager" ref="shiroEhcacheManager" /> -->
	</bean>

	<!-- 用户授权信息Cache, 采用EhCache，需要的话就配置上此信息 -->
	<!-- <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml" />
	</bean> -->

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
</beans>